@using static WorkManagermentWeb.Client.Layout.MainLayout
@inject INotification NotificationService
@inject NavigationManager NavManager
@inject IStringLocalizer<Resource> localizer

@foreach (var noti in NotiListResponse.Notifications)
{
    <div>
        <div class="rounded-1 p-3 mb-2 bg-secondary bg-gradient text-white">
            @if (!noti.IsRead)
            {
                <Badge Color="BadgeColor.Success">@localizer["New"]</Badge>
            }
            <label class="fw-bold" @onclick="() => MarkAsRead(noti.Id, noti.RedirectAt)">
                <u class="pe-auto text-white" style="cursor: pointer">@noti.Title</u>
            </label>
            <label class="d-flex justify-content-end">@noti.CraetedAt</label>
        </div>
    </div>
}
@if (NotiListResponse.Notifications.Count < NotiListResponse.Total)
{
    <Button class="mt-3" Color="ButtonColor.Primary" Type="ButtonType.Button" @onclick="HandleMoreNoti">
        <Icon Name="IconName.Eye" /> @localizer["Read More"]
    </Button>
}

@code {
    /// <summary>
    /// HideOffcanvas
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> HideOffcanvas { get; set; }

    /// <summary>
    /// ShowMoreNoti
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> ShowMoreNoti { get; set; }

    /// <summary>
    /// NotiListResponse
    /// </summary>
    [Parameter]
    public GetListNotiResponse NotiListResponse { get; set; } = new(0, new List<NotificationDTO>());

    /// <summary>
    /// MarkAsRead
    /// </summary>
    /// <param name="id"></param>
    /// <param name="redirectUrl"></param>
    /// <returns></returns>
    private async Task MarkAsRead(Guid id, string redirectUrl)
    {
        await NotificationService.MarkAsReadAsync(id);
        if (!string.IsNullOrEmpty(redirectUrl))
        {
            await HideOffcanvas.InvokeAsync();
            NavManager.NavigateTo(redirectUrl, true);
        }
    }

    /// <summary>
    /// HandleMoreNoti
    /// </summary>
    /// <returns></returns>
    private async Task HandleMoreNoti()
    {
        await ShowMoreNoti.InvokeAsync();
    }
}
